---
type HTMLInputTypeAttribute =
  | 'button' | 'checkbox' | 'color' | 'date' | 'datetime-local' | 'email'
  | 'file' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio'
  | 'range' | 'reset' | 'search' | 'submit' | 'tel' | 'text' | 'time'
  | 'url' | 'week';

interface Props {
  id: string; // Make id required
  type?: HTMLInputTypeAttribute;
  value?: string;
  label?: string;
  className?: string; // Allows custom styles
  src?: string; // Optional media source (image or icon)
  alt?: string; // Accessibility for media
  [key: string]: any; // Dynamic attributes (e.g., role, aria-*)
}

const {
  id,
  type = 'text',
  value = '',
  label = 'Input Field',
  className = '',
  src,
  alt = '',
  ...rest // Spread operator for additional dynamic attributes
} = Astro.props;
---

<div class={`relative ${className}`} {...rest}>
      <input
        type={type}
        id={id}
        value={value}
        class="block px-2.5 pb-2.5 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer"
      />
      <label
        for={id}
        class="absolute text-sm text-gray-500 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-transparent px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4"
      >
        {label}
      </label>
</div>
