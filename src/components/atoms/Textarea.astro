---
interface Props {
  id: string; // id is required
  className?: string; // allows custom styles
  src?: string; // optional media source (image or icon)
  alt?: string; // accessibility for media
  label?: string; // optional label for the field
  value?: string; // optional value for the textarea
  [key: string]: any; // allow dynamic attributes (e.g., role, aria-*)
}

const {
  id,
  className = '',
  src,
  alt = '',
  label = 'Textarea Field',
  value = '',
  ...rest // spread operator for additional attributes
} = Astro.props;
---

<div class={`relative ${className}`} {...rest}>
      <textarea
        id={id}
        class="block px-2.5 pb-2.5 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer"
        >{value}</textarea>
      <label
        for={id}
        class="absolute text-sm text-gray-500 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-transparent px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4"
      >
        {label}
      </label>
</div>
